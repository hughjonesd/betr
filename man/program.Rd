% Generated by roxygen2 (4.0.0): do not edit by hand
\name{program}
\alias{program}
\title{Run a function, either once or for each subject}
\usage{
program(run, fn, name = "No name")
}
\arguments{
\item{run}{"first", "last", or "all".}

\item{fn}{a function which should take two arguments, \code{id} and
\code{period}.}

\item{name}{optional name of the stage.}
}
\value{
A Stage object of class Program
}
\description{
Run a function, either once or for each subject
}
\details{
If
\code{run} is \code{"all"} then the function \code{fn} will be run every time
a subject reaches the stage. If \code{run} is \code{"first"} then \code{fn}
will be run when the first subject reaches the stage. If \code{run} is
\code{"last"} then \code{fn} will be run when the last subject reaches
the stage.
}
\examples{
expt <- experiment(N=16, on_ready=function() {
 mpcr <<- 1.5
 mydf <<- experiment_data_frame(expt)
 mydf$contrib <<- NA
 mydf$profit <<- NA
 mydf$group <<- rep(rep(1:4, each=4), nperiods(expt))
})

s1 <- function(id, period, params) {
 if (! is.null(params) && 'contrib' \%in\% names(params)) {
   mydf$contrib[mydf$id==id & mydf$period==period] <<- params$contrib
   return(NEXT)
 } else {
   return("<html><body><form action=''>
     Enter a contribution:<input name='contrib' type='text'>
     <input type='submit' value='Next'></form></body></html>")
 }
}

s2 <- program("last", function(id, period) {
 mydf$profit <<- with(mydf[mydf$period==period,]
       ave(contrib, group, FUN=function(x) 50 - x + mpcr * mean(x)))
})

add_stage(expt, period(), s1, checkpoint(mydf$group), s2, s3, times=10)
}
\seealso{
Other stages: \code{\link{NEXT}}, \code{\link{WAIT}},
  \code{\link{stage}}; \code{\link{checkpoint}};
  \code{\link{form_stage}}; \code{\link{period}};
  \code{\link{text_stage}}; \code{\link{timed}}
}

