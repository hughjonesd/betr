% Generated by roxygen2 (4.0.0): do not edit by hand
\name{experiment}
\alias{experiment}
\title{Create an experiment.}
\usage{
experiment(...)
}
\arguments{
\item{auth}{may be TRUE, FALSE, a character vector of regular expressions,
or a function taking two arguments, client and params.}

\item{port}{what port to listen on}

\item{autostart}{logical. Start the experiment automatically when N
participants have joined?}

\item{allow_latecomers}{logical. Allow participants to join after the
experiment has started?}

\item{N}{a numeric giving how many participants are required}

\item{server}{a class name (quoted or unquoted) of a betr::Server
subclass, or an instance object. Typical: "RookServer"}

\item{name}{the character name of the experiment, used in creating
folders.}

\item{client_refresh}{numeric. How often should waiting clients refresh
their pages?}

\item{clients_in_url}{logical. If \code{TRUE}, client names can be specified
in the URL as e.g. experiment/client_name. Useful for testing, should
be turned off in production!}

\item{seats_file}{path of the file where seat information is stored. See
\code{\link{identify_seats}} for details. Note: to suppress warnings
about a missing file, use \code{seats_file=NULL}.}

\item{on_ready}{a user-defined function, to be called when \code{\link{ready}}
is called. Use \code{on_ready} to initialize your data. In this
way your experiment will be replay-safe, since \code{replay} calls
\code{ready} automatically.}

\item{randomize_ids}{if \code{TRUE}, subject IDs will be randomized from
1 to \code{N}. If \code{FALSE} subject IDs will be allocated first-come
first-served.}

\item{record}{records experiment commands to disk. Turning this off will save
disk space and not clutter your working directory, but will prevent
experiment replay.}

\item{seed}{a seed to set whenever \code{\link{ready}} is called. You should
       ensure you set this to a different value in every session.}
}
\value{
an object of class Experiment.
}
\description{
In betr, an experiment consists of one or more stages, as well
as global options defined when the experiment is created.
}
\details{
An experiment is typically created in a source file, which also adds one or
more stages to it using \code{\link{add_stage}}. When you run the experiment,
you source this file. Call \code{\link[=ready]{ready(experiment)}} when you
want subjects to be able to connect to the server. They will see a waiting
page which refreshes regularly. To see your experiment's status, call
\code{\link[=info]{info(experiment)}} or simply type \code{experiment} on the
command line. When you want the experiment to start, call
\code{\link[=start]{start(experiment)}}.

To keep your experiments replay-safe, use \code{\link{on_ready}} to initialize your data.
}
\examples{
expt <- experiment(name='testing', port=12345, N=4)
add_stage(expt, function(...)"<html><body>Hello world!</body><html>")
ready(expt)
}

