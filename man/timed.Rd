% Generated by roxygen2 (4.0.0): do not edit by hand
\name{timed}
\alias{timed}
\title{Add a timeout to a stage}
\usage{
timed(stage, timeout, on_timeout = function(...) NULL)
}
\arguments{
\item{stage}{A Stage object, or a function}

\item{timeout}{timeout length in seconds}

\item{on_timeout}{a function to be called if a subject times out.}
}
\value{
A Stage object of class Timed
}
\description{
Add a timeout to a stage
}
\details{
Returns a Stage which contains the original \code{stage}.
If a subject times out, `NEXT` is returned and `on_timeout` is called with
arguments `(id, period)`.

Timed stages are implemented using
\href{http://en.wikipedia.org/wiki/Meta_refresh}{http refresh}. This is not a
standard part of the HTTP specification, so use with caution if you do not
control which browsers your subjects will be running.
}
\examples{
s1 <- form_stage(c(header(), "Enter something",
     "<form action='' method='POST'><input name='foo'></form>", footer()),
     fields=list(foo=has_value()), data_frame="mydf")
# set a default value:
s1_timed <- timed(s1, 60, on_timeout=function(id, period)
     mydf$foo[mydf$id==id & mydf$period==period] <<- "Default value"))
}
\seealso{
Other stages: \code{\link{NEXT}}, \code{\link{WAIT}},
  \code{\link{stage}}; \code{\link{checkpoint}};
  \code{\link{form_stage}}; \code{\link{period}};
  \code{\link{program}}; \code{\link{structured_stage}};
  \code{\link{text_stage}}
}

